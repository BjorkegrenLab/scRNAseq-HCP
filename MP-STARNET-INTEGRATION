###Fig6

### MP SUBCLUSTERS

up_MP1.markers <- read.delim("MP1_2022.txt", header = T, sep="\t")
rownames(up_MP1.markers) <- up_MP1.markers$X
up_MP2.markers <- read.delim("MP2_2022.txt", header = T, sep="\t")
rownames(up_MP2.markers) <- up_MP2.markers$X
up_MP3.markers <- read.delim("MP3_2022.txt", header = T, sep="\t")
rownames(up_MP3.markers) <- up_MP3.markers$X
#up_MP4.markers <- read.delim("MP4_2022.txt", header = T, sep="\t")
#rownames(up_MP4.markers) <- up_MP4.markers$X
up_MP5.markers <- read.delim("MP5_2022.txt", header = T, sep="\t")
rownames(up_MP5.markers) <- up_MP5.markers$X
up_MP7.markers <- read.delim("MP7_2022.txt", header = T, sep="\t")
rownames(up_MP7.markers) <- up_MP7.markers$X
up_MP8.markers <- read.delim("MP8_2022.txt", header = T, sep="\t")
rownames(up_MP8.markers) <- up_MP8.markers$X

MP1_M <- c(rownames(up_MP1.markers[up_MP1.markers$avg_log2FC > 0.5, ]))
MP1_M <- unique(MP1_M)

MP2_F <- c(rownames(up_MP2.markers[up_MP2.markers$avg_log2FC > 0.5, ]))
MP2_F <- unique(MP2_F)

MP3_F <- c(rownames(up_MP3.markers[up_MP3.markers$avg_log2FC > 0.5, ]))
MP3_F <- unique(MP3_F)

#MP4_M <- c(rownames(up_MP4.markers[up_MP4.markers$avg_log2FC > 0.5, ]))
#MP4_M <- unique(MP4_M)

MP5_F <- c(rownames(up_MP5.markers[up_MP5.markers$avg_log2FC > 0.5, ]))
MP5_F<- unique(MP5_F)

MP7_M <- c(rownames(up_MP7.markers[up_MP7.markers$avg_log2FC > 0.5, ]))
MP7_M <- unique(MP7_M)

MP8_F <- c(rownames(up_MP8.markers[up_MP8.markers$avg_log2FC > 0.5, ]))
MP8_F <- unique(MP8_F)


STARNET_MP1<-  read.delim("MP1_STARNET.csv", header = T, sep =",")
STARNET_MP1 <- STARNET_MP1[STARNET_MP1$module_size < 1000, ]
rownames(STARNET_MP1) <- STARNET_MP1$module
STARNET_MP1<- STARNET_MP1[order(rownames(STARNET_MP1)), ]


STARNET_MP2<-  read.delim("MP2_STARNET.csv", header = T, sep =",")
STARNET_MP2 <- STARNET_MP2[STARNET_MP2$module_size < 1000, ]
rownames(STARNET_MP2) <- STARNET_MP2$module
STARNET_MP2<- STARNET_MP2[order(rownames(STARNET_MP2)), ]


STARNET_MP3<-  read.delim("MP3_STARNET.csv", header = T, sep =",")
STARNET_MP3 <- STARNET_MP3[STARNET_MP3$module_size < 1000, ]
rownames(STARNET_MP3) <- STARNET_MP3$module
STARNET_MP3<- STARNET_MP3[order(rownames(STARNET_MP3)), ]


#STARNET_MP4<-  read.delim("MP4_STARNET.csv", header = T, sep =",")
#STARNET_MP4 <- STARNET_MP4[STARNET_MP4$module_size < 1000, ]
#rownames(STARNET_MP4) <- STARNET_MP4$module
#STARNET_MP4<- STARNET_MP4[order(rownames(STARNET_MP4)), ]


STARNET_MP5<-  read.delim("MP5_STARNET.csv", header = T, sep =",")
STARNET_MP5 <- STARNET_MP5[STARNET_MP5$module_size < 1000, ]
rownames(STARNET_MP5) <- STARNET_MP5$module
STARNET_MP5<- STARNET_MP5[order(rownames(STARNET_MP5)), ]


STARNET_MP7<-  read.delim("MP7_STARNET.csv", header = T, sep =",")
STARNET_MP7 <- STARNET_MP7[STARNET_MP7$module_size < 1000, ]
rownames(STARNET_MP7) <- STARNET_MP7$module
STARNET_MP7<- STARNET_MP7[order(rownames(STARNET_MP7)), ]


STARNET_MP8<-  read.delim("MP8_STARNET.csv", header = T, sep =",")
STARNET_MP8 <- STARNET_MP8[STARNET_MP8$module_size < 1000, ]
rownames(STARNET_MP8) <- STARNET_MP8$module
STARNET_MP8<- STARNET_MP8[order(rownames(STARNET_MP8)), ]

dat_STARNET_overlap <- data.frame(STARNET_MP1$overlap,STARNET_MP2$overlap,STARNET_MP3$overlap,STARNET_MP5$overlap,STARNET_MP7$overlap,STARNET_MP8$overlap)
colnames(dat_STARNET_overlap) <- c("MP1","MP2","MP3","MP5","MP7","MP8")
rownames(dat_STARNET_overlap) <- rownames(STARNET_MP1)
dat_STARNET_overlap <- dat_STARNET_overlap[rowSums(dat_STARNET_overlap) > 30, ]


dat_STARNET_FDR <- data.frame(STARNET_MP1$FDR,STARNET_MP2$FDR,STARNET_MP3$FDR,STARNET_MP5$FDR,STARNET_MP7$FDR,STARNET_MP8$FDR)
colnames(dat_STARNET_FDR) <- c("MP1","MP2","MP3","MP5","MP7","MP8")
rownames(dat_STARNET_FDR) <- rownames(STARNET_MP1)
dat_STARNET_FDR <- dat_STARNET_FDR[rownames(dat_STARNET_overlap), ]
#dat_STARNET_FDR <- t(dat_STARNET_FDR)

dat_STARNET_FDR_log <-   -log10(dat_STARNET_FDR)

FDR_sum <- as.data.frame(rowSums(dat_STARNET_FDR_log))
colnames(FDR_sum) <- "FDR"
FDR_sum$GRN <- rownames(FDR_sum)
FDR_sum <- as.data.frame(FDR_sum[order(FDR_sum$FDR), ])


FDR <- c(dat_STARNET_FDR_log$MP1,dat_STARNET_FDR_log$MP2,dat_STARNET_FDR_log$MP3,dat_STARNET_FDR_log$MP5,dat_STARNET_FDR_log$MP7,dat_STARNET_FDR_log$MP8)
grn <- c(rownames(dat_STARNET_FDR_log),rownames(dat_STARNET_FDR_log),rownames(dat_STARNET_FDR_log),rownames(dat_STARNET_FDR_log),rownames(dat_STARNET_FDR_log),rownames(dat_STARNET_FDR_log))
overlap <- c(dat_STARNET_overlap$MP1,dat_STARNET_overlap$MP2,dat_STARNET_overlap$MP3,dat_STARNET_overlap$MP5,dat_STARNET_overlap$MP7,dat_STARNET_overlap$MP8)

dat_dot <- data.frame(grn, FDR,overlap)
#dat_STARNET_overlap <- as.data.frame(t(dat_STARNET_overlap))
#dat_STARNET_overlap$cluster <- rownames(dat_STARNET_overlap)

cluster <- colnames(dat_STARNET_overlap)

dat_dot$cluster <- c(rep(cluster[1], nrow(dat_STARNET_overlap)),rep(cluster[2], nrow(dat_STARNET_overlap)),rep(cluster[3], nrow(dat_STARNET_overlap)),rep(cluster[4], nrow(dat_STARNET_overlap)),rep(cluster[5], nrow(dat_STARNET_overlap)),rep(cluster[6], nrow(dat_STARNET_overlap)))

dat_dot$grn <- factor(dat_dot$grn, levels = rownames(FDR_sum))

p<- ggplot(dat_dot, aes(grn, FDR)) + geom_point(aes(col=cluster, size= overlap, alpha=0.2))+ theme_bw()  +RotatedAxis()
p
p+theme(axis.text.x = element_text(face = "plain",size = 8, angle = 60,colour="red"),panel.spacing.x = unit(10,"cm"),legend.position = "top",panel.spacing.y = unit(1.5,"cm"),panel.grid.major.x = element_blank(),panel.grid.minor.x = element_blank())

ggplot(dat_dot, aes(grn, FDR)) + geom_point(aes(col=cluster, size= overlap))+ theme_bw()+ scale_color_manual(values = c("#00C0B8","#7CAE00","#C59900","#FF61CC","#C77CFF","#619CFF"))+theme(axis.text.x = element_text(face = "plain",size = 8, angle = 60,colour="red"),panel.spacing.x = unit(10,"cm"),legend.position = "top",panel.spacing.y = unit(1.5,"cm"),panel.grid.major.x = element_blank(),panel.grid.minor.x = element_blank())+RotatedAxis()

dat_dot_subset<- (dat_dot[dat_dot$grn %in% c("154","26","106","165","141","177","191","82","201","170","158","49","150","127","3","174","33","122"),])
ggplot(dat_dot_subset, aes(grn, FDR)) + geom_point(aes(col=cluster, size= overlap))+ theme_bw()+ scale_color_manual(values = c("#00C0B8","#7CAE00","#C59900","#FF61CC","#C77CFF","#619CFF"))+theme(axis.text.x = element_text(face = "plain",size = 8, angle = 60,colour="red"),panel.spacing.x = unit(10,"cm"),legend.position = "top",panel.spacing.y = unit(1.5,"cm"),panel.grid.major.x = element_blank(),panel.grid.minor.x = element_blank())+RotatedAxis()

######################################
dat_dot_subsets<- (dat_dot_subset[dat_dot_subset$grn %in% c("154","26","106","165","141","177","191","82","201","170","158","49","150","127","122","3","33","174"),])
dat_dot_subsets$grn <- factor(dat_dot_subsets$grn, levels = c("154","26","106","165","141","177","191","82","201","170","158","49","150","127","122","3","33","174"))

dat_dot_subsets$gender <- dat_dot_subset$cluster
dat_dot_subsets$gender[dat_dot_subsets$gender=="MP1"]<-"male"
dat_dot_subsets$gender[dat_dot_subsets$gender=="MP2"]<-"female"
dat_dot_subsets$gender[dat_dot_subsets$gender=="MP3"]<-"female"
dat_dot_subsets$gender[dat_dot_subsets$gender=="MP5"]<-"female"
dat_dot_subsets$gender[dat_dot_subsets$gender=="MP7"]<-"male"
dat_dot_subsets$gender[dat_dot_subsets$gender=="MP8"]<-"female"

ggplot(dat_dot_subsets, aes(grn, FDR)) + geom_point(aes(col=cluster, size= overlap, shape=cluster))+ theme_bw()+ scale_color_manual(values = c("blue","red","red","red","blue","red"))+theme(axis.text.x = element_text(face = "plain",size = 8, angle = 60,colour="red"),panel.spacing.x = unit(10,"cm"),legend.position = "top",panel.spacing.y = unit(1.5,"cm"),panel.grid.major.x = element_blank(),panel.grid.minor.x = element_blank())+RotatedAxis()
pdf("grnMP_2024_NEW.pdf",onefile=TRUE, width=10,height=5)

ggplot(dat_dot_subsets, aes(grn, FDR)) + geom_point(aes(col=cluster, size= overlap, shape=cluster))+ theme_bw()+ scale_color_manual(values = c("blue","red","red","red","blue","red"))+theme(axis.text.x = element_text(face = "plain",size = 8, angle = 60,colour="red"),panel.spacing.x = unit(10,"cm"),legend.position = "right",panel.spacing.y = unit(1.5,"cm"),panel.grid.major.x = element_blank(),panel.grid.minor.x = element_blank())+RotatedAxis()
dev.off()

### DUKE
phen<- read.delim("MPSYNTAXDUKE2022.txt")
p1<- ggplot(phen,aes(x=GRN,y= SYNTAX))
p2<- ggplot(phen,aes(y= SYNTAX, x=fct_inorder(GRN))) + geom_bar(stat = "identity",fill = "purple")+theme_bw()+theme(axis.line.y = element_line(colour = "black"),axis.line.x =element_line(colour = "black"),panel.grid.major.x = element_blank(),panel.grid.minor.x = element_blank(),panel.grid.major.y =element_blank(),panel.grid.minor.y = element_blank(),panel.border=element_blank(),panel.background=element_blank()) +theme(text = element_text(size = 20)) +coord_flip()
p2

###SYNTAX
p1<- ggplot(phen,aes(x=GRN,y= DUKE))
p2<- ggplot(phen,aes(y= DUKE, x=fct_inorder(GRN))) + geom_bar(stat = "identity",fill = "yellow")+theme_bw()+theme(axis.line.y = element_line(colour = "black"),axis.line.x =element_line(colour = "black"),panel.grid.major.x = element_blank(),panel.grid.minor.x = element_blank(),panel.grid.major.y =element_blank(),panel.grid.minor.y = element_blank(),panel.border=element_blank(),panel.background=element_blank()) +theme(text = element_text(size = 20)) +coord_flip()
p2

##### DEG in MP sym vs asym
phen<- read.delim("DEGMPSYMGRN.txt")
p1<- ggplot(phen,aes(x=GRN,y= FDR))
p2<- ggplot(phen,aes(y= FDR, x=fct_inorder(GRN))) + geom_bar(stat = "identity",fill = "green")+theme_bw()+theme(axis.line.y = element_line(colour = "black"),axis.line.x =element_line(colour = "black"),panel.grid.major.x = element_blank(),panel.grid.minor.x = element_blank(),panel.grid.major.y =element_blank(),panel.grid.minor.y = element_blank(),panel.border=element_blank(),panel.background=element_blank()) +theme(text = element_text(size = 20)) +coord_flip()
p2


